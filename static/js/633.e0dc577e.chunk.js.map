{"version":3,"file":"static/js/633.e0dc577e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Forms/ContactForm.module.css?3c99","components/Forms/ContactForms.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Modal/modal.module.css?1a55","components/Modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","helpers/hoks/useModal.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/page/contacts-page/contacts-page.module.css?d21f","components/page/contacts-page/ContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__qwOAF\",\"label\":\"ContactForm_label__Fz4Cs\",\"btnAdd\":\"ContactForm_btnAdd__uobz+\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport css from '../Forms/ContactForm.module.css';\n\nconst ContactForm = ({ onHandleSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const idName = nanoid();\n  const idNumber = nanoid();\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n    onHandleSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  return (\n    <div className={css.formContainer}>\n      <form onSubmit={hendleSubmit} className={css.form}>\n        <label className={css.label} htmlFor={idName}>\n          Name\n        </label>\n        <input\n          id={idName}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n        <label className={css.label} htmlFor={idNumber}>\n          Number\n        </label>\n        <input\n          id={idNumber}\n          type=\"number\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n        />\n        <button className={css.btnAdd} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.prototypes = {\n  onHandleSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modal_overlay__fCMjT\",\"modal\":\"modal_modal__Nszx8\",\"form\":\"modal_form__XLwVD\",\"label\":\"modal_label__M0oxu\",\"btnAdd\":\"modal_btnAdd__19APS\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contactSlice';\nimport { nanoid } from 'nanoid';\nimport style from 'components/Modal/modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\nconst Modal = ({ close, contact }) => {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const dispatch = useDispatch();\n\n  const modalClose = ({ target, currentTarget, code }) => {\n    if (target === currentTarget || code === 'Escape') {\n      close();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('keydown', modalClose);\n    return () => {\n      document.removeEventListener('keydown', modalClose);\n    };\n  });\n  const { id } = contact;\n  const idName = nanoid();\n  const idNumber = nanoid();\n  const hendleSubmit = e => {\n    e.preventDefault();\n    dispatch(editContact({ id, name, number }));\n    setName('');\n    setNumber('');\n    close();\n  };\n  const handleChange = e => {\n    const { value, name } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n  return createPortal(\n    <div className={style.overlay} onClick={modalClose}>\n      <div className={style.modal}>\n        <form onSubmit={hendleSubmit} className={style.form}>\n          <label className={style.label} htmlFor={idName}>\n            Name\n          </label>\n          <input\n            id={idName}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n          <label className={style.label} htmlFor={idNumber}>\n            Number\n          </label>\n          <input\n            id={idNumber}\n            type=\"phone\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n          />\n          <button className={style.btnAdd} type=\"submit\">\n            Edit contact\n          </button>\n        </form>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDelete\":\"ContactList_btnDelete__Eeo9v\",\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contactSlice';\nimport { useModal } from 'helpers/hoks/useModal';\nimport Modal from 'components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport css from '../ContactList/ContactList.module.css';\nconst ContactList = () => {\n  const contactListItem = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const filterContact = contactListItem.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n  const { modalOpen, openModalState, closeModalState } = useModal();\n  const dispatch = useDispatch();\n  const [contact, setContact] = useState({});\n  const openModal = contact => {\n    setContact({ ...contact });\n\n    openModalState();\n    document.body.style.overflow = 'hidden';\n  };\n  const modalClose = () => {\n    closeModalState();\n    document.body.style.overflow = '';\n  };\n  return filterContact.length === 0 ? (\n    <p>There is no contact list</p>\n  ) : (\n    <>\n      {modalOpen && <Modal close={modalClose} contact={contact} />}\n\n      <ul className={css.list}>\n        {filterContact.map(({ name, id, number }) => (\n          <li key={id} className={css.item}>\n            {name}: {number}{' '}\n            <button\n              className={css.btnDelete}\n              onClick={() => openModal({ id, name, number })}\n              type=\"button\"\n            >\n              Edit\n            </button>\n            <button\n              className={css.btnDelete}\n              onClick={() => dispatch(deleteContact(id))}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  removeContact: PropTypes.func,\n  filterContact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nContactList.defaultProps = {\n  filterContact: [],\n};\n","import { useState } from 'react';\n\nexport const useModal = (initialState = false) => {\n  const [modalOpen, setModalOpen] = useState(initialState);\n  const openModalState = () => setModalOpen(true);\n  const closeModalState = () => setModalOpen(false);\n  return { modalOpen, openModalState, closeModalState };\n};","// extracted by mini-css-extract-plugin\nexport default {\"blocFilter\":\"Filter_blocFilter__reiU2\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contactSlice';\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const textInput = useSelector(state => state.contacts.filter);\n\n  const onSetFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <div className={css.blocFilter}>\n      <label>Filter</label>\n      <input name=\"filter\" onChange={onSetFilter} value={textInput} />\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.prototypes = {\n  value: PropTypes.string,\n  handleFilter: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"contacts-page_title__R-AcY\",\"appContainer\":\"contacts-page_appContainer__Ik9+q\"};","import { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport ContactForm from 'components/Forms/ContactForms'\nimport ContactList from 'components/ContactList/ContactList'\nimport Filter from 'components/Filter/Filter'\nimport { fetchContacts, addContacts } from 'redux/contactSlice';\n\nimport css from './contacts-page.module.css'\nconst ContactsPage = () => {\n\n    const dispatch = useDispatch();\n    const contactList = useSelector(state => state.contacts.contacts.items);\n    const { error, isLoading } = useSelector(state => state.contacts.contacts);\n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n    const handleFormSubmit = (name, number) => {\n      const inContact = Boolean(\n        contactList.find(e => e.name.toUpperCase() === name.toUpperCase())\n      );\n      const inNumber = Boolean(contactList.find(e => e.number === number));\n      if (inContact) return alert(`контакт ${name}  існує`);\n      if (inNumber) return alert(`номер ${number}  існує`);\n  \n      dispatch(addContacts({ name, number }));\n    };\n    return (\n        <div className={css.appContainer}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm onHandleSubmit={handleFormSubmit} />\n        {contactList.length > 0 && <Filter />}\n  \n        <h2 className={css.title}>Contacts</h2>\n        {error && <p>Error: {error}</p>}\n  \n        {isLoading === true && <h2>Loading...</h2>}\n        <ContactList />\n      </div>\n    )\n}\nexport default ContactsPage","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ContactForm","onHandleSubmit","useState","name","setName","number","setNumber","idName","nanoid","idNumber","handleChange","e","target","value","className","css","onSubmit","preventDefault","htmlFor","id","type","pattern","title","required","onChange","prototypes","PropTypes","modalRoot","document","querySelector","close","contact","dispatch","useDispatch","modalClose","currentTarget","code","useEffect","addEventListener","removeEventListener","createPortal","style","onClick","editContact","ContactList","contactListItem","useSelector","state","contacts","items","filter","filterContact","toLowerCase","includes","initialState","modalOpen","setModalOpen","openModalState","closeModalState","useModal","setContact","length","body","overflow","map","openModal","deleteContact","defaultProps","Filter","textInput","setFilter","handleFilter","contactList","error","isLoading","fetchContacts","inContact","Boolean","find","toUpperCase","inNumber","alert","addContacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString"],"sourceRoot":""}