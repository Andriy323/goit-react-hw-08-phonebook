{"version":3,"file":"static/js/50.9595bc7b.chunk.js","mappings":"wOACA,GAAgB,KAAO,yBAAyB,MAAQ,0BAA0B,IAAM,yB,SC2DxF,EAvDkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAUC,EAAAA,EAAAA,MAEVC,GAAaD,EAAAA,EAAAA,MACbE,GAAWC,EAAAA,EAAAA,MACXC,EAAc,SAAAC,GAClB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACD,aAATD,GAAqBT,EAAYU,GACxB,UAATD,GAAkBX,EAASY,EAChC,EAQD,OACE,4BACE,mCAEA,kBAAMC,UAAWC,EAAAA,KAAYC,SAVZ,SAAAN,GACnBA,EAAEO,iBACFV,GAASW,EAAAA,EAAAA,IAAU,CAAElB,MAAAA,EAAOE,SAAAA,KAC5BD,EAAS,IACTE,EAAY,GACb,EAKG,WACE,kBAAOW,UAAWC,EAAAA,MAAaI,QAASf,EAAxC,mBAES,KACT,kBACEgB,KAAK,QACLN,UAAWC,EAAAA,MACXM,GAAIjB,EACJQ,KAAK,QACLC,MAAOb,EACPsB,SAAUb,KAEZ,kBAAOK,UAAWC,EAAAA,MAAaI,QAASb,EAAxC,sBAES,KACT,kBACEc,KAAK,OACLN,UAAWC,EAAAA,MACXM,GAAIf,EACJM,KAAK,WACLC,MAAOX,EACPoB,SAAUb,KAEZ,mBAAQK,UAAWC,EAAAA,IAAWK,KAAK,SAAnC,wBAMP,C,uDCzDM,IAkBIf,EAAS,eAACkB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACN,EAAIO,GAWvD,OAREP,IAFFO,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/page/login-page/login-page.module.css?fd7f","components/page/login-page/LoginPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"login-page_form__5hpOX\",\"label\":\"login-page_label__6BBef\",\"btn\":\"login-page_btn__f5rVz\"};","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/autchSlice';\nimport style from './login-page.module.css';\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const idEmail = nanoid();\n\n  const idPAssword = nanoid();\n  const dispatch = useDispatch();\n  const hundleChang = e => {\n    const { name, value } = e.target;\n    if (name === 'password') setPassword(value);\n    if (name === 'email') setEmail(value);\n  };\n\n  const hundleSubmit = e => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n\n      <form className={style.form} onSubmit={hundleSubmit}>\n        <label className={style.label} htmlFor={idEmail}>\n          Email\n        </label>{' '}\n        <input\n          type=\"email\"\n          className={style.input}\n          id={idEmail}\n          name=\"email\"\n          value={email}\n          onChange={hundleChang}\n        />\n        <label className={style.label} htmlFor={idPAssword}>\n          Password\n        </label>{' '}\n        <input\n          type=\"text\"\n          className={style.input}\n          id={idPAssword}\n          name=\"password\"\n          value={password}\n          onChange={hundleChang}\n        />\n        <button className={style.btn} type=\"submit\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","email","setEmail","password","setPassword","idEmail","nanoid","idPAssword","dispatch","useDispatch","hundleChang","e","target","name","value","className","style","onSubmit","preventDefault","loginUser","htmlFor","type","id","onChange","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}